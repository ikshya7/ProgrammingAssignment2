makeCacheMatrix <- function(x = matrix()) {
inverse <- NULL
set <- function(matrix) {
x <<- matrix
inverse <<- NULL
}
get <- function() {
x
}}
# Function to compute the inverse of the matrix
cacheSolve <- function(...) {
if (!is.null(inverse)) {
message("Getting cached inverse")
return(inverse)
}
message("Calculating inverse and caching")
inverse <<- solve(x, ...)
inverse
}
# Return a list of functions
list(set = set, get = get, cacheSolve = cacheSolve)
}
cacheSolve <- function(x, ...) {
x$cacheSolve(...)
}
Example
mat <- makeCacheMatrix()
mat$set(matrix(c(4, 6, 2, 3), nrow = 2))
cacheSolve(mat)
